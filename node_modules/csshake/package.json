{
  "_args": [
    [
      {
        "raw": "csshake",
        "scope": null,
        "escapedName": "csshake",
        "name": null,
        "rawSpec": "csshake",
        "spec": "C:\\Users\\Josie\\Documents\\website\\josieesh.github.io\\csshake",
        "type": "directory"
      },
      "C:\\Users\\Josie\\Documents\\website\\josieesh.github.io"
    ]
  ],
  "_from": "csshake",
  "_id": "csshake@1.5.1",
  "_inCache": true,
  "_location": "/csshake",
  "_phantomChildren": {},
  "_requested": {
    "raw": "csshake",
    "scope": null,
    "escapedName": "csshake",
    "name": null,
    "rawSpec": "csshake",
    "spec": "C:\\Users\\Josie\\Documents\\website\\josieesh.github.io\\csshake",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:csshake",
  "_shasum": "666919926689ef85bdbc482781ec36fb7d0b1660",
  "_shrinkwrap": null,
  "_spec": "csshake",
  "_where": "C:\\Users\\Josie\\Documents\\website\\josieesh.github.io",
  "author": {
    "name": "Lionel T",
    "email": "elrumordelaluz@hotmail.com",
    "url": "http://elrumordelaluz.com"
  },
  "bugs": {
    "url": "https://github.com/elrumordelaluz/csshake/issues"
  },
  "dependencies": {},
  "description": "Some CSS classes to move your DOM!",
  "devDependencies": {
    "gzip-size-cli": "^1.0.0",
    "node-sass": "^3.8.0",
    "pretty-bytes": "^2.0.1"
  },
  "gitHead": "7f7f2c22ab97338a3a7149f5426a2ffa37e98a85",
  "homepage": "https://github.com/elrumordelaluz/csshake",
  "keywords": [
    "css",
    "transitions",
    "animations"
  ],
  "license": "MIT",
  "main": "dist/csshake.css",
  "name": "csshake",
  "optionalDependencies": {},
  "readme": "# Csshake [![npm version](https://badge.fury.io/js/csshake.svg)](http://badge.fury.io/js/csshake)\r\nSome CSS classes to move your DOM!\r\n[Live Demo](http://elrumordelaluz.github.io/csshake/)\r\n\r\n### Origins\r\nI had to do a 'shake-animation' for a big project. First, I did it in vanilla CSS.\r\nAfter finish it I discover [this](http://jackrugile.com/jrumble/) cool jQuery plugin by [@jackrugile](https://twitter.com/jackrugile).\r\nThen I started to think in made *[this little CSS project](http://elrumordelaluz.github.io/csshake/)*\r\n\r\n### Install\r\nFork this repo\r\n```\r\n  $ git clone https://github.com/elrumordelaluz/csshake.git\r\n```\r\n\r\nor via Bower\r\n```\r\n  $ bower install csshake\r\n```\r\n\r\nor via npm\r\n```\r\n  $ npm i csshake\r\n```\r\n\r\n#### scripts\r\n```\r\n  $ npm run watch\r\n  $ npm run build:raw\r\n  $ npm run build:min\r\n```\r\n\r\n#### Download Center http://csshake.surge.sh/\r\nYou could download the complete `csshake.css` file or separated files for each shake animation (i.e `csshake-little.css`).\r\nEach one expanded or minified.\r\n\r\n### CDN\r\nNow is also available in `cdnjs` for each shake animation: https://cdnjs.com/libraries/csshake\r\n\r\n\r\n### How to use\r\nFirst include the CSS file\r\n```html\r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"csshake.css\">`\r\n```\r\n\r\nThen call the diffetent classes on the element you want to shake!\r\n```html\r\n  <div class=\"shake\"></div>\r\n  <div class=\"shake shake-hard\"></div>\r\n  <div class=\"shake shake-slow\"></div>\r\n  <div class=\"shake shake-little\"></div>\r\n  <div class=\"shake shake-horizontal\"></div>\r\n  <div class=\"shake shake-vertical\"></div>\r\n  <div class=\"shake shake-rotate\"></div>\r\n  <div class=\"shake shake-opacity\"></div>\r\n  <div class=\"shake shake-crazy\"></div>\r\n```\r\n\r\nAdd also classes to control the `animation-play-state`.\r\n```html\r\n<!-- Freeze the animation at that point when :hover -->\r\n<div class=\"shake shake-freeze\"></div>\r\n<!-- Continuous animation instead on :hover -->\r\n<div class=\"shake shake-constant\"></div>\r\n<!-- and stop when :hover -->\r\n<div class=\"shake shake-constant shake-constant--hover\"></div>\r\n```\r\n\r\n### Customize\r\nYou could customize the Sass @mixins to create new shaking animations, yeah!\r\nEditing the `do-shake` mixin in `scss/_tools.scss` file\r\n```scss\r\n.my-custom-shake {\r\n  @include do-shake(\r\n        $name: 'my-custom-shake',\r\n        $h: 5px,\r\n        $v: 5px,\r\n        $r: 3deg,\r\n        $dur: 100ms,\r\n        $precision: .02,\r\n        $opacity: false,\r\n        $q: infinite,\r\n        $t: ease-in-out,\r\n        $delay: null,\r\n        $chunk: 100%);\r\n}\r\n```\r\n\r\n`$name` {String} is the name for the keyframes animation\r\n\r\n`$h` {Number} is the max number for random to assign in x axis\r\n\r\n`$v` {Number} is the max number for random to assign in y axis\r\n\r\n`$r` {Number} is the max number for random rotation\r\n\r\n`$dur` {Number} is the `animation-duration` time value\r\n\r\n`$precision` {Number} is the precision of the keyframes animation. For example `.02` generates keyframes each 2% and `.1` each 10%. The calculation is `$step: 100 * $precision;`\r\n\r\n`$opacity` {Boolean} to apply random animation also in the opacity property\r\n\r\n`$q` {String} is the `animation-iteration-count` value\r\n\r\n`$t` {String} `animation-timing-function` value\r\n\r\n`$delay` {Number} `animation-delay` time value\r\n\r\n`$chunk` {Number} is the part of the keyframes where apply the animation\r\n\r\n### Use with Webpack 2.x\r\nWhen installed with `npm`, import `csshake` inside your css|stylus|sass files with `~` prefix to trigger webpack's module resolving:\r\n```scss\r\n@import '~csshake';\r\n```\r\nThis will get you non-minified plain css.\r\n\r\n##### Import source sass files\r\nInclude full path relative to your `node_modules` folder with csshake installation\r\n```scss\r\n@import '~csshake/scss/csshake-hard.scss';\r\n```\r\n\r\n=======\r\n\r\n### Changelog\r\n#### [v1.5.0](https://github.com/elrumordelaluz/csshake/releases/tag/v1.5) (October 5, 2015)\r\n- Improve the core mixin for a better output code\r\n- Generate the entire 'shake' animation from only one [@mixin](https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L30). Easier to cerate custom shakes animations classes.\r\n- Add a [new argument](https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L41) to allow animate only part of the 100% of keyframes. Solves [issue #25](https://github.com/elrumordelaluz/csshake/issues/25)\r\n- Add a [class](https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L3) to allow fire animation from a parent element. Solves [issue #16](https://github.com/elrumordelaluz/csshake/issues/16)\r\n- Update semanthics on modifiers classes\r\n- Export separated stylesheets for each animation. Solves [issue #20](https://github.com/elrumordelaluz/csshake/issues/20)\r\n\r\n======\r\n\r\nMade with â™¥ by [@elrumordelaluz](http://twitter.com/elrumordelaluz) using [Sass](http://sass-lang.com/).\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/elrumordelaluz/csshake.git"
  },
  "scripts": {
    "build": "npm run build:raw && npm run build:min",
    "build:min": "mkdir -p dist/min && node-sass --output-style compressed scss/ -o dist/min && npm run suffix && npm run move",
    "build:raw": "node-sass scss/ -o dist/",
    "gzip": "gzip-size dist/csshake.min.css | pretty-bytes",
    "gzip:all": "for file in dist/*.css; do echo \"$file\"; gzip-size \"$file\" | pretty-bytes; done",
    "move": "mv dist/min/*.css dist && rm -r dist/min",
    "start": "npm run build && npm run gzip && npm run gzip:all",
    "suffix": "for file in dist/min/*.css; do mv \"$file\" \"${file%.css}.min.css\"; done",
    "watch": "node-sass --watch scss/ -o dist/"
  },
  "version": "1.5.1"
}
